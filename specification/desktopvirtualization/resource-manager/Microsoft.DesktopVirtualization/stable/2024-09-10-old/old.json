{
  "swagger": "2.0",
  "info": {
    "title": "Desktop Virtualization API Client",
    "version": "2024-09-10"
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.DesktopVirtualization/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List all of the available operations the Desktop Virtualization resource provider supports.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operations.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OperationDescription_List": {
            "$ref": "./examples/OperationDescription_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/appAttachPackages": {
      "get": {
        "operationId": "AppAttachPackage_ListBySubscription",
        "tags": [
          "AppAttachPackage"
        ],
        "description": "List App Attach packages in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are package name, host pool, and resource group.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved App Attach Packages in subscription.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackage_ListBySubscription": {
            "$ref": "./examples/AppAttachPackage_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroups_ListBySubscription",
        "tags": [
          "ApplicationGroup"
        ],
        "description": "List applicationGroups in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are applicationGroupType.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application groups in subscription.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_List": {
            "$ref": "./examples/ApplicationGroup_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools": {
      "get": {
        "operationId": "HostPools_List",
        "tags": [
          "HostPool"
        ],
        "description": "List hostPools in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in subscription.",
            "schema": {
              "$ref": "#/definitions/HostPoolList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_List": {
            "$ref": "./examples/HostPool_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans": {
      "get": {
        "operationId": "ScalingPlans_ListBySubscription",
        "tags": [
          "ScalingPlan"
        ],
        "description": "List scaling plans in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plans in subscription.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_ListBySubscription": {
            "$ref": "./examples/ScalingPlan_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "tags": [
          "Workspace"
        ],
        "description": "List workspaces in subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspaces in subscription.",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_ListBySubscription": {
            "$ref": "./examples/Workspace_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/appAttachPackages": {
      "get": {
        "operationId": "AppAttachPackage_ListByResourceGroup",
        "tags": [
          "AppAttachPackage"
        ],
        "description": "List App Attach packages in resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are package name and host pool.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved App Attach Packages in resource group.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackage_ListByResourceGroup": {
            "$ref": "./examples/AppAttachPackage_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/appAttachPackages/{appAttachPackageName}": {
      "get": {
        "operationId": "AppAttachPackage_Get",
        "tags": [
          "AppAttachPackage"
        ],
        "description": "Get an app attach package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AppAttachPackageNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved App Attach Package.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackage_Get": {
            "$ref": "./examples/AppAttachPackage_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AppAttachPackage_CreateOrUpdate",
        "tags": [
          "AppAttachPackage"
        ],
        "description": "Create or update an App Attach package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AppAttachPackageNameParameter"
          },
          {
            "name": "appAttachPackage",
            "in": "body",
            "description": "Object containing App Attach Package definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppAttachPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated App Attach Package.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackage"
            }
          },
          "201": {
            "description": "Successfully created App Attach Package.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackage"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackage_Create": {
            "$ref": "./examples/AppAttachPackage_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "AppAttachPackage_Update",
        "tags": [
          "AppAttachPackage"
        ],
        "description": "Update an App Attach Package",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AppAttachPackageNameParameter"
          },
          {
            "name": "appAttachPackagePatch",
            "in": "body",
            "description": "Object containing App Attach Package definition.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AppAttachPackagePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated App Attach Package.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackage_Update": {
            "$ref": "./examples/AppAttachPackage_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "AppAttachPackage_Delete",
        "tags": [
          "AppAttachPackage"
        ],
        "description": "Remove an App Attach Package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AppAttachPackageNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted App Attach Package."
          },
          "204": {
            "description": "App Attach Package does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackage_Delete": {
            "$ref": "./examples/AppAttachPackage_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroups_ListByResourceGroup",
        "tags": [
          "ApplicationGroup"
        ],
        "description": "List applicationGroups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are applicationGroupType.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application groups in resource group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_ListByResourceGroup": {
            "$ref": "./examples/ApplicationGroup_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}": {
      "get": {
        "operationId": "ApplicationGroups_Get",
        "tags": [
          "ApplicationGroup"
        ],
        "description": "Get an application group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_Get": {
            "$ref": "./examples/ApplicationGroup_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationGroups_CreateOrUpdate",
        "tags": [
          "ApplicationGroup"
        ],
        "description": "Create or update an applicationGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "Object containing ApplicationGroup definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "201": {
            "description": "Successfully created application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_Create": {
            "$ref": "./examples/ApplicationGroup_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ApplicationGroups_Update",
        "tags": [
          "ApplicationGroup"
        ],
        "description": "Update an applicationGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "Object containing ApplicationGroup definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationGroupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroups_Update": {
            "$ref": "./examples/ApplicationGroup_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ApplicationGroups_Delete",
        "tags": [
          "ApplicationGroup"
        ],
        "description": "Remove an applicationGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed application group."
          },
          "204": {
            "description": "Application group does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroup_Delete": {
            "$ref": "./examples/ApplicationGroup_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications": {
      "get": {
        "operationId": "Applications_List",
        "tags": [
          "Application"
        ],
        "description": "List applications.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved applications in application group.",
            "schema": {
              "$ref": "#/definitions/ApplicationList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Applications_List": {
            "$ref": "./examples/Application_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/applications/{applicationName}": {
      "get": {
        "operationId": "Applications_Get",
        "tags": [
          "Application"
        ],
        "description": "Get an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Application_Get": {
            "$ref": "./examples/Application_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Applications_CreateOrUpdate",
        "tags": [
          "Application"
        ],
        "description": "Create or update an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "name": "application",
            "in": "body",
            "description": "Object containing Application definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "201": {
            "description": "Successfully created application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Application_Create": {
            "$ref": "./examples/Application_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "Applications_Update",
        "tags": [
          "Application"
        ],
        "description": "Update an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "name": "application",
            "in": "body",
            "description": "Object containing Application definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Application_Update": {
            "$ref": "./examples/Application_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Applications_Delete",
        "tags": [
          "Application"
        ],
        "description": "Remove an application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed application."
          },
          "204": {
            "description": "Application does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Application_Delete": {
            "$ref": "./examples/Application_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops": {
      "get": {
        "operationId": "Desktops_List",
        "tags": [
          "Desktop"
        ],
        "description": "List desktops.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved desktops in application group.",
            "schema": {
              "$ref": "#/definitions/DesktopList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Desktop_List": {
            "$ref": "./examples/Desktop_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/desktops/{desktopName}": {
      "get": {
        "operationId": "Desktops_Get",
        "tags": [
          "Desktop"
        ],
        "description": "Get a desktop.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DesktopNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved desktop.",
            "schema": {
              "$ref": "#/definitions/Desktop"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Desktop_Get": {
            "$ref": "./examples/Desktop_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "Desktops_Update",
        "tags": [
          "Desktop"
        ],
        "description": "Update a desktop.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DesktopNameParameter"
          },
          {
            "name": "desktop",
            "in": "body",
            "description": "Object containing Desktop definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DesktopPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated desktop.",
            "schema": {
              "$ref": "#/definitions/Desktop"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Desktop_Update": {
            "$ref": "./examples/Desktop_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}/startMenuItems": {
      "get": {
        "operationId": "StartMenuItems_List",
        "tags": [
          "StartMenuItem"
        ],
        "description": "List start menu items in the given application group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved start menu items in application group.",
            "schema": {
              "$ref": "#/definitions/StartMenuItemList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StartMenuItem_List": {
            "$ref": "./examples/StartMenuItem_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools": {
      "get": {
        "operationId": "HostPools_ListByResourceGroup",
        "tags": [
          "HostPool"
        ],
        "description": "List hostPools.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in resource group.",
            "schema": {
              "$ref": "#/definitions/HostPoolList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_ListByResourceGroup": {
            "$ref": "./examples/HostPool_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}": {
      "get": {
        "operationId": "HostPools_Get",
        "tags": [
          "HostPool"
        ],
        "description": "Get a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Get": {
            "$ref": "./examples/HostPool_Get.json"
          }
        }
      },
      "put": {
        "operationId": "HostPools_CreateOrUpdate",
        "tags": [
          "HostPool"
        ],
        "description": "Create or update a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPool",
            "in": "body",
            "description": "Object containing HostPool definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "201": {
            "description": "Successfully created host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Create": {
            "$ref": "./examples/HostPool_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "HostPools_Update",
        "tags": [
          "HostPool"
        ],
        "description": "Update a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "hostPool",
            "in": "body",
            "description": "Object containing HostPool definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HostPoolPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated host pool.",
            "schema": {
              "$ref": "#/definitions/HostPool"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Update": {
            "$ref": "./examples/HostPool_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "HostPools_Delete",
        "tags": [
          "HostPool"
        ],
        "description": "Remove a host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to delete sessionHost.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed host pool."
          },
          "204": {
            "description": "Host pool does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPool_Delete": {
            "$ref": "./examples/HostPool_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/expandMsixImage": {
      "post": {
        "operationId": "MsixImages_Expand",
        "tags": [
          "MsixImage"
        ],
        "description": "Expands and Lists MSIX packages in an Image, given the Image Path.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "msixImageURI",
            "in": "body",
            "description": "Object containing URI to MSIX Image",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSIXImageURI"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved MSIX packages in specified Image Path.",
            "schema": {
              "$ref": "#/definitions/ExpandMsixImageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "MsixImage_Expand": {
            "$ref": "./examples/MsixImage_Expand_Post.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/importAppAttachPackageInfo": {
      "post": {
        "operationId": "AppAttachPackageInfo_Import",
        "tags": [
          "AppAttachPackageInfo"
        ],
        "description": "Gets information from a package given the path to the package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "importPackageInfoRequest",
            "in": "body",
            "description": "Object containing URI to package image and other optional properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportPackageInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved packages in specified Image Path.",
            "schema": {
              "$ref": "#/definitions/AppAttachPackageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AppAttachPackageInfo_Import": {
            "$ref": "./examples/AppAttachPackageInfo_Import_Post.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/listRegistrationTokens": {
      "post": {
        "operationId": "HostPools_ListRegistrationTokens",
        "tags": [
          "HostPool"
        ],
        "description": "Operation to list the RegistrationTokens associated with the HostPool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in resource group.",
            "schema": {
              "$ref": "#/definitions/RegistrationTokenList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPools_ListRegistrationToken_Post": {
            "$ref": "./examples/HostPools_ListRegistrationToken_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByHostPool",
        "tags": [
          "PrivateLink"
        ],
        "description": "List private endpoint connections associated with hostpool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection list.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResultWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_ListByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_GetByHostPool",
        "tags": [
          "PrivateLink"
        ],
        "description": "Get a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the connection.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_GetByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_GetByHostPool.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_UpdateByHostPool",
        "tags": [
          "PrivateLink"
        ],
        "description": "Approve or reject a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Object containing the updated connection.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_UpdateByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_UpdateByHostPool.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_DeleteByHostPool",
        "tags": [
          "PrivateLink"
        ],
        "description": "Remove a connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed."
          },
          "204": {
            "description": "Connection does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_DeleteByHostPool": {
            "$ref": "./examples/PrivateEndpointConnection_DeleteByHostPool.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByHostPool",
        "tags": [
          "PrivateLink"
        ],
        "description": "List the private link resources available for this hostpool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByHostPool": {
            "$ref": "./examples/PrivateLinkResources_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/retrieveRegistrationToken": {
      "post": {
        "operationId": "HostPools_RetrieveRegistrationToken",
        "tags": [
          "HostPool"
        ],
        "description": "Registration token of the host pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved host pool in resource group.",
            "schema": {
              "$ref": "#/definitions/RegistrationInfo"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HostPools_RetrieveRegistrationToken_Post": {
            "$ref": "./examples/HostPools_RetrieveRegistrationToken_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/scalingPlans": {
      "get": {
        "operationId": "ScalingPlans_ListByHostPool",
        "tags": [
          "ScalingPlan"
        ],
        "description": "List scaling plan associated with hostpool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plan associated with hostpool.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlan_ListByHostPool": {
            "$ref": "./examples/ScalingPlan_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts": {
      "get": {
        "operationId": "SessionHosts_List",
        "tags": [
          "SessionHost"
        ],
        "description": "List sessionHosts.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session hosts in host pool.",
            "schema": {
              "$ref": "#/definitions/SessionHostList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_List": {
            "$ref": "./examples/SessionHost_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}": {
      "get": {
        "operationId": "SessionHosts_Get",
        "tags": [
          "SessionHost"
        ],
        "description": "Get a session host.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session host.",
            "schema": {
              "$ref": "#/definitions/SessionHost"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_Get": {
            "$ref": "./examples/SessionHost_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "SessionHosts_Update",
        "tags": [
          "SessionHost"
        ],
        "description": "Update a session host.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "name": "sessionHost",
            "in": "body",
            "description": "Object containing SessionHost definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SessionHostPatch"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to update assign, unassign or reassign personal desktop.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated session host.",
            "schema": {
              "$ref": "#/definitions/SessionHost"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_Update": {
            "$ref": "./examples/SessionHost_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "SessionHosts_Delete",
        "tags": [
          "SessionHost"
        ],
        "description": "Remove a SessionHost.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to force sessionHost deletion even when userSession exists.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed session host."
          },
          "204": {
            "description": "Session host does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SessionHost_Delete": {
            "$ref": "./examples/SessionHost_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions": {
      "get": {
        "operationId": "UserSessions_List",
        "tags": [
          "UserSession"
        ],
        "description": "List userSessions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user sessions in session host.",
            "schema": {
              "$ref": "#/definitions/UserSessionList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_List": {
            "$ref": "./examples/UserSession_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}": {
      "get": {
        "operationId": "UserSessions_Get",
        "tags": [
          "UserSession"
        ],
        "description": "Get a userSession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user session.",
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_Get": {
            "$ref": "./examples/UserSession_Get.json"
          }
        }
      },
      "delete": {
        "operationId": "UserSessions_Delete",
        "tags": [
          "UserSession"
        ],
        "description": "Remove a userSession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force flag to login off userSession.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed user session."
          },
          "204": {
            "description": "User session does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_Delete": {
            "$ref": "./examples/UserSession_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/disconnect": {
      "post": {
        "operationId": "UserSessions_Disconnect",
        "tags": [
          "UserSession"
        ],
        "description": "Disconnect a userSession.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disconnected user session."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_Disconnect_Post": {
            "$ref": "./examples/UserSession_Disconnect_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/sessionHosts/{sessionHostName}/userSessions/{userSessionId}/sendMessage": {
      "post": {
        "operationId": "UserSessions_SendMessage",
        "tags": [
          "UserSession"
        ],
        "description": "Send a message to a user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/SessionHostNameParameter"
          },
          {
            "$ref": "#/parameters/UserSessionIdParameter"
          },
          {
            "name": "sendMessage",
            "in": "body",
            "description": "Object containing message includes title and message body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent message to user session."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_SendMessage_Post": {
            "$ref": "./examples/UserSession_SendMessage_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/userSessions": {
      "get": {
        "operationId": "UserSessions_ListByHostPool",
        "tags": [
          "UserSession"
        ],
        "description": "List userSessions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter expression. Valid properties for filtering are userprincipalname and sessionstate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user sessions in host pool.",
            "schema": {
              "$ref": "#/definitions/UserSessionList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserSession_ListByHostPool": {
            "$ref": "./examples/UserSession_ListByHostPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans": {
      "get": {
        "operationId": "ScalingPlans_ListByResourceGroup",
        "tags": [
          "ScalingPlan"
        ],
        "description": "List scaling plans.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plans in resource group.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_ListByResourceGroup": {
            "$ref": "./examples/ScalingPlan_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}": {
      "get": {
        "operationId": "ScalingPlans_Get",
        "tags": [
          "ScalingPlan"
        ],
        "description": "Get a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Get": {
            "$ref": "./examples/ScalingPlan_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScalingPlans_Create",
        "tags": [
          "ScalingPlan"
        ],
        "description": "Create or update a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "name": "scalingPlan",
            "in": "body",
            "description": "Object containing scaling plan definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "201": {
            "description": "Successfully created scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Create": {
            "$ref": "./examples/ScalingPlan_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ScalingPlans_Update",
        "tags": [
          "ScalingPlan"
        ],
        "description": "Update a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "name": "scalingPlan",
            "in": "body",
            "description": "Object containing scaling plan definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated scaling plan.",
            "schema": {
              "$ref": "#/definitions/ScalingPlan"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Update": {
            "$ref": "./examples/ScalingPlan_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ScalingPlans_Delete",
        "tags": [
          "ScalingPlan"
        ],
        "description": "Remove a scaling plan.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted scaling plan."
          },
          "204": {
            "description": "Scaling plan does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlans_Delete": {
            "$ref": "./examples/ScalingPlan_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/personalSchedules": {
      "get": {
        "operationId": "ScalingPlanPersonalSchedules_List",
        "tags": [
          "ScalingPlanPersonalSchedule"
        ],
        "description": "List ScalingPlanPersonalSchedules.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved ScalingPlanPersonalSchedules.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalScheduleList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_List": {
            "$ref": "./examples/ScalingPlanPersonalSchedule_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/personalSchedules/{scalingPlanScheduleName}": {
      "get": {
        "operationId": "ScalingPlanPersonalSchedules_Get",
        "tags": [
          "ScalingPlanPersonalSchedule"
        ],
        "description": "Get a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved ScalingPlanPersonalSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Get": {
            "$ref": "./examples/ScalingPlanPersonalSchedule_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScalingPlanPersonalSchedules_Create",
        "tags": [
          "ScalingPlanPersonalSchedule"
        ],
        "description": "Create or update a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPersonalSchedule definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated ScalingPlanPersonalSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "201": {
            "description": "Successfully created ScalingPlanPersonalSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Create": {
            "$ref": "./examples/ScalingPlanPersonalSchedule_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ScalingPlanPersonalSchedules_Update",
        "tags": [
          "ScalingPlanPersonalSchedule"
        ],
        "description": "Update a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPersonalSchedule definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated ScalingPlanPersonalSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPersonalSchedule"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Update": {
            "$ref": "./examples/ScalingPlanPersonalSchedule_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ScalingPlanPersonalSchedules_Delete",
        "tags": [
          "ScalingPlanPersonalSchedule"
        ],
        "description": "Remove a ScalingPlanPersonalSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed ScalingPlanPersonalSchedule."
          },
          "204": {
            "description": "ScalingPlanPersonalSchedule does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPersonalSchedules_Delete": {
            "$ref": "./examples/ScalingPlanPersonalSchedule_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/pooledSchedules": {
      "get": {
        "operationId": "ScalingPlanPooledSchedules_List",
        "tags": [
          "ScalingPlanPooledSchedule"
        ],
        "description": "List ScalingPlanPooledSchedules.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved ScalingPlanPooledSchedules.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledScheduleList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_List": {
            "$ref": "./examples/ScalingPlanPooledSchedule_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}/pooledSchedules/{scalingPlanScheduleName}": {
      "get": {
        "operationId": "ScalingPlanPooledSchedules_Get",
        "tags": [
          "ScalingPlanPooledSchedule"
        ],
        "description": "Get a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved ScalingPlanPooledSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Get": {
            "$ref": "./examples/ScalingPlanPooledSchedule_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScalingPlanPooledSchedules_Create",
        "tags": [
          "ScalingPlanPooledSchedule"
        ],
        "description": "Create or update a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPooledSchedule definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated ScalingPlanPooledSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "201": {
            "description": "Successfully created ScalingPlanPooledSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Create": {
            "$ref": "./examples/ScalingPlanPooledSchedule_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "ScalingPlanPooledSchedules_Update",
        "tags": [
          "ScalingPlanPooledSchedule"
        ],
        "description": "Update a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          },
          {
            "name": "scalingPlanSchedule",
            "in": "body",
            "description": "Object containing ScalingPlanPooledSchedule definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated ScalingPlanPooledSchedule.",
            "schema": {
              "$ref": "#/definitions/ScalingPlanPooledSchedule"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Update": {
            "$ref": "./examples/ScalingPlanPooledSchedule_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ScalingPlanPooledSchedules_Delete",
        "tags": [
          "ScalingPlanPooledSchedule"
        ],
        "description": "Remove a ScalingPlanPooledSchedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanNameParameter"
          },
          {
            "$ref": "#/parameters/ScalingPlanScheduleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed ScalingPlanPooledSchedule."
          },
          "204": {
            "description": "ScalingPlanPooledSchedule does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScalingPlanPooledSchedules_Delete": {
            "$ref": "./examples/ScalingPlanPooledSchedule_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "tags": [
          "Workspace"
        ],
        "description": "List workspaces.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspaces in resource group.",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_ListByResourceGroup": {
            "$ref": "./examples/Workspace_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspace"
        ],
        "description": "Get a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Get": {
            "$ref": "./examples/Workspace_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "tags": [
          "Workspace"
        ],
        "description": "Create or update a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "workspace",
            "in": "body",
            "description": "Object containing Workspace definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Successfully created workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Create": {
            "$ref": "./examples/Workspace_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "tags": [
          "Workspace"
        ],
        "description": "Update a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "workspace",
            "in": "body",
            "description": "Object containing Workspace definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkspacePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated workspace.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Update": {
            "$ref": "./examples/Workspace_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspace"
        ],
        "description": "Remove a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted workspace."
          },
          "204": {
            "description": "Workspace does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Workspace_Delete": {
            "$ref": "./examples/Workspace_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByWorkspace",
        "tags": [
          "PrivateLink"
        ],
        "description": "List private endpoint connections.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection list.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResultWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_ListByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_GetByWorkspace",
        "tags": [
          "PrivateLink"
        ],
        "description": "Get a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the connection.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_GetByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_GetByWorkspace.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_UpdateByWorkspace",
        "tags": [
          "PrivateLink"
        ],
        "description": "Approve or reject a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Object containing the updated connection.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_UpdateByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_UpdateByWorkspace.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_DeleteByWorkspace",
        "tags": [
          "PrivateLink"
        ],
        "description": "Remove a connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed."
          },
          "204": {
            "description": "Connection does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_DeleteByWorkspace": {
            "$ref": "./examples/PrivateEndpointConnection_DeleteByWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByWorkspace",
        "tags": [
          "PrivateLink"
        ],
        "description": "List the private link resources available for this workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByWorkspace": {
            "$ref": "./examples/PrivateLinkResources_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages": {
      "get": {
        "operationId": "MSIXPackages_List",
        "tags": [
          "MSIXPackage"
        ],
        "description": "List MSIX packages in hostpool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isDescending",
            "in": "query",
            "description": "Indicates whether the collection is descending.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "initialSkip",
            "in": "query",
            "description": "Initial number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved MSIX Packages in hostpool.",
            "schema": {
              "$ref": "#/definitions/MSIXPackageList"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_List": {
            "$ref": "./examples/MsixPackage_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}/msixPackages/{msixPackageFullName}": {
      "get": {
        "operationId": "MSIXPackages_Get",
        "tags": [
          "MSIXPackage"
        ],
        "description": "Get a msixpackage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Get": {
            "$ref": "./examples/MsixPackage_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MSIXPackages_CreateOrUpdate",
        "tags": [
          "MSIXPackage"
        ],
        "description": "Create or update a MSIX package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          },
          {
            "name": "msixPackage",
            "in": "body",
            "description": "Object containing  MSIX Package definitions.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated  MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "201": {
            "description": "Successfully created  MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Create": {
            "$ref": "./examples/MsixPackage_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "MSIXPackages_Update",
        "tags": [
          "MSIXPackage"
        ],
        "description": "Update an  MSIX Package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          },
          {
            "name": "msixPackage",
            "in": "body",
            "description": "Object containing MSIX Package definitions.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MSIXPackagePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated MSIX Package.",
            "schema": {
              "$ref": "#/definitions/MSIXPackage"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Update": {
            "$ref": "./examples/MsixPackage_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "MSIXPackages_Delete",
        "tags": [
          "MSIXPackage"
        ],
        "description": "Remove an MSIX Package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HostPoolNameParameter"
          },
          {
            "$ref": "#/parameters/MSIXPackageFullNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed MSIX Package."
          },
          "204": {
            "description": "MSIX Package does not exist."
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "MSIXPackage_Delete": {
            "$ref": "./examples/MsixPackage_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AgentUpdatePatchProperties": {
      "type": "object",
      "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of maintenance for session host components.",
          "enum": [
            "Default",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "SessionHostComponentUpdateType",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "Agent and other agent side components are delivery schedule is controlled by WVD Infra."
              },
              {
                "value": "Scheduled",
                "description": "TenantAdmin have opted in for Scheduled Component Update feature."
              }
            ]
          }
        },
        "useSessionHostLocalTime": {
          "type": "boolean",
          "description": "Whether to use localTime of the virtual machine."
        },
        "maintenanceWindowTimeZone": {
          "type": "string",
          "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
        },
        "maintenanceWindows": {
          "type": "array",
          "description": "List of maintenance windows. Maintenance windows are 2 hours long.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MaintenanceWindowPatchProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AgentUpdateProperties": {
      "type": "object",
      "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of maintenance for session host components.",
          "enum": [
            "Default",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "SessionHostComponentUpdateType",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "Agent and other agent side components are delivery schedule is controlled by WVD Infra."
              },
              {
                "value": "Scheduled",
                "description": "TenantAdmin have opted in for Scheduled Component Update feature."
              }
            ]
          }
        },
        "useSessionHostLocalTime": {
          "type": "boolean",
          "description": "Whether to use localTime of the virtual machine."
        },
        "maintenanceWindowTimeZone": {
          "type": "string",
          "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
        },
        "maintenanceWindows": {
          "type": "array",
          "description": "List of maintenance windows. Maintenance windows are 2 hours long.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MaintenanceWindowProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AppAttachPackage": {
      "type": "object",
      "description": "Schema for App Attach Package properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AppAttachPackageProperties",
          "description": "Detailed properties for App Attach Package",
          "x-nullable": false
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-flatten": false
    },
    "AppAttachPackageInfoProperties": {
      "type": "object",
      "description": "Schema for Import Package Information properties.",
      "properties": {
        "packageAlias": {
          "type": "string",
          "description": "Alias of App Attach Package. Assigned at import time"
        },
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share.",
          "x-nullable": false
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
          "x-nullable": false
        },
        "packageFullName": {
          "type": "string",
          "description": "Package Full Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal. ",
          "x-nullable": true
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image. ",
          "x-nullable": false
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed.",
          "x-nullable": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool. ",
          "x-nullable": false
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies. ",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          },
          "x-ms-identifiers": []
        },
        "version": {
          "type": "string",
          "description": "Package version found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date Package was last updated, found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications. ",
          "x-nullable": false,
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          },
          "x-ms-identifiers": []
        },
        "certificateName": {
          "type": "string",
          "description": "Certificate name found in the appxmanifest.xml. ",
          "x-nullable": true
        },
        "certificateExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "Date certificate expires, found in the appxmanifest.xml. ",
          "x-nullable": true
        },
        "isPackageTimestamped": {
          "type": "string",
          "description": "Is package timestamped so it can ignore the certificate expiry date",
          "enum": [
            "Timestamped",
            "NotTimestamped"
          ],
          "x-ms-enum": {
            "name": "packageTimestamped",
            "modelAsString": true
          },
          "x-nullable": true
        }
      }
    },
    "AppAttachPackageList": {
      "type": "object",
      "title": "AppAttachPackageList",
      "description": "List of App Attach Package definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of App Attach Package definitions.",
          "items": {
            "$ref": "#/definitions/AppAttachPackage"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "AppAttachPackagePatch": {
      "type": "object",
      "description": "Schema for updatable App Attach Package properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AppAttachPackagePatchProperties",
          "description": "Detailed properties for App Attach Package",
          "x-nullable": false,
          "x-ms-client-flatten": false
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "AppAttachPackagePatchProperties": {
      "type": "object",
      "description": "Schema for patchable fields on an App Attach Package.",
      "properties": {
        "image": {
          "$ref": "#/definitions/AppAttachPackageInfoProperties",
          "description": "Detailed properties for App Attach Package"
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of Hostpool resource Ids.",
          "items": {
            "type": "string",
            "format": "arm-id"
          }
        },
        "keyVaultURL": {
          "type": "string",
          "description": "URL path to certificate name located in keyVault"
        },
        "failHealthCheckOnStagingFailure": {
          "$ref": "#/definitions/FailHealthCheckOnStagingFailureEnum",
          "description": "Parameter indicating how the health check should behave if this package fails staging"
        }
      }
    },
    "AppAttachPackageProperties": {
      "type": "object",
      "description": "Schema for App Attach Package properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the App Attach Package.",
          "readOnly": true
        },
        "image": {
          "$ref": "#/definitions/AppAttachPackageInfoProperties",
          "description": "Detailed properties for App Attach Package",
          "x-nullable": false
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of Hostpool resource Ids.",
          "items": {
            "type": "string"
          }
        },
        "keyVaultURL": {
          "type": "string",
          "description": "URL path to certificate name located in keyVault"
        },
        "failHealthCheckOnStagingFailure": {
          "$ref": "#/definitions/FailHealthCheckOnStagingFailureEnum",
          "description": "Parameter indicating how the health check should behave if this package fails staging"
        }
      }
    },
    "Application": {
      "type": "object",
      "description": "Schema for Application properties.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/ApplicationProperties",
          "description": "Detailed properties for Application",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "ApplicationGroup": {
      "type": "object",
      "description": "Represents a ApplicationGroup definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/ApplicationGroupProperties",
          "description": "Detailed properties for ApplicationGroup",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ]
    },
    "ApplicationGroupList": {
      "type": "object",
      "title": "ApplicationGroupList",
      "description": "List of ApplicationGroup definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of ApplicationGroup definitions.",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ApplicationGroupPatch": {
      "type": "object",
      "description": "ApplicationGroup properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ApplicationGroupPatchProperties",
          "description": "ApplicationGroup properties that can be patched.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "ApplicationGroupPatchProperties": {
      "type": "object",
      "description": "ApplicationGroup properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of ApplicationGroup."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of ApplicationGroup."
        },
        "showInFeed": {
          "type": "boolean",
          "description": "Boolean representing whether the applicationGroup is show in the feed."
        }
      }
    },
    "ApplicationGroupProperties": {
      "type": "object",
      "description": "Schema for ApplicationGroup properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of ApplicationGroup. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of ApplicationGroup."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of ApplicationGroup."
        },
        "hostPoolArmPath": {
          "type": "string",
          "description": "HostPool arm path of ApplicationGroup.",
          "x-nullable": false
        },
        "workspaceArmPath": {
          "type": "string",
          "description": "Workspace arm path of ApplicationGroup.",
          "readOnly": true
        },
        "applicationGroupType": {
          "type": "string",
          "description": "Resource Type of ApplicationGroup.",
          "enum": [
            "RemoteApp",
            "Desktop"
          ],
          "x-ms-enum": {
            "name": "ApplicationGroupType",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "x-nullable": true,
          "readOnly": true
        },
        "showInFeed": {
          "type": "boolean",
          "description": "Boolean representing whether the applicationGroup is show in the feed."
        }
      },
      "required": [
        "hostPoolArmPath",
        "applicationGroupType"
      ]
    },
    "ApplicationList": {
      "type": "object",
      "title": "ApplicationList",
      "description": "List of Application definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Application definitions.",
          "items": {
            "$ref": "#/definitions/Application"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ApplicationPatch": {
      "type": "object",
      "description": "Application properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ApplicationPatchProperties",
          "description": "Detailed properties for Application",
          "x-ms-client-flatten": true
        }
      }
    },
    "ApplicationPatchProperties": {
      "type": "object",
      "description": "Application properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Application."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Application."
        },
        "filePath": {
          "type": "string",
          "description": "Specifies a path for the executable file for the application."
        },
        "commandLineSetting": {
          "type": "string",
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
          "enum": [
            "DoNotAllow",
            "Allow",
            "Require"
          ],
          "x-ms-enum": {
            "name": "CommandLineSetting",
            "modelAsString": true
          }
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command Line Arguments for Application."
        },
        "showInPortal": {
          "type": "boolean",
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to icon."
        },
        "iconIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the icon."
        },
        "msixPackageFamilyName": {
          "type": "string",
          "description": "Specifies the package family name for MSIX applications",
          "x-nullable": true
        },
        "msixPackageApplicationId": {
          "type": "string",
          "description": "Specifies the package application Id for MSIX applications",
          "x-nullable": true
        },
        "applicationType": {
          "type": "string",
          "description": "Resource Type of Application.",
          "enum": [
            "InBuilt",
            "MsixApplication"
          ],
          "x-ms-enum": {
            "name": "RemoteApplicationType",
            "modelAsString": true
          }
        }
      }
    },
    "ApplicationProperties": {
      "type": "object",
      "description": "Schema for Application properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Application. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Application."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Application."
        },
        "filePath": {
          "type": "string",
          "description": "Specifies a path for the executable file for the application."
        },
        "msixPackageFamilyName": {
          "type": "string",
          "description": "Specifies the package family name for MSIX applications",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "msixPackageApplicationId": {
          "type": "string",
          "description": "Specifies the package application Id for MSIX applications",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "applicationType": {
          "type": "string",
          "description": "Resource Type of Application.",
          "enum": [
            "InBuilt",
            "MsixApplication"
          ],
          "x-ms-enum": {
            "name": "RemoteApplicationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "commandLineSetting": {
          "type": "string",
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
          "enum": [
            "DoNotAllow",
            "Allow",
            "Require"
          ],
          "x-ms-enum": {
            "name": "CommandLineSetting",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command Line Arguments for Application."
        },
        "showInPortal": {
          "type": "boolean",
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to icon."
        },
        "iconIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the icon."
        },
        "iconHash": {
          "type": "string",
          "description": "Hash of the icon.",
          "readOnly": true
        },
        "iconContent": {
          "type": "string",
          "format": "byte",
          "description": "the icon a 64 bit string as a byte array.",
          "readOnly": true
        }
      },
      "required": [
        "commandLineSetting"
      ]
    },
    "CloudError": {
      "type": "object",
      "description": "Cloud error object.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorProperties"
        }
      },
      "x-ms-external": true
    },
    "CloudErrorProperties": {
      "type": "object",
      "description": "Cloud error object properties.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed."
        }
      }
    },
    "Desktop": {
      "type": "object",
      "description": "Schema for Desktop properties.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/DesktopProperties",
          "description": "Detailed properties for Desktop",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "DesktopList": {
      "type": "object",
      "title": "DesktopList",
      "description": "List of Desktop definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Desktop definitions.",
          "items": {
            "$ref": "#/definitions/Desktop"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "DesktopPatch": {
      "type": "object",
      "description": "Desktop properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/DesktopPatchProperties",
          "description": "Detailed properties for Desktop",
          "x-ms-client-flatten": true
        }
      }
    },
    "DesktopPatchProperties": {
      "type": "object",
      "description": "Desktop properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Desktop."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Desktop."
        }
      }
    },
    "DesktopProperties": {
      "type": "object",
      "description": "Schema for Desktop properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Desktop. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Desktop."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Desktop."
        },
        "iconHash": {
          "type": "string",
          "description": "Hash of the icon.",
          "readOnly": true
        },
        "iconContent": {
          "type": "string",
          "format": "byte",
          "description": "The icon a 64 bit string as a byte array.",
          "readOnly": true
        }
      }
    },
    "ExpandMsixImage": {
      "type": "object",
      "description": "Represents the definition of contents retrieved after expanding the MSIX Image. ",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExpandMsixImageProperties",
          "description": "Detailed properties for ExpandMsixImage",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "ExpandMsixImageList": {
      "type": "object",
      "title": "ExpandMsixImageList",
      "description": "List of MSIX package properties retrieved from MSIX Image expansion.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MSIX package properties from give MSIX Image.",
          "items": {
            "$ref": "#/definitions/ExpandMsixImage"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ExpandMsixImageProperties": {
      "type": "object",
      "description": "Schema for Expand MSIX Image properties.",
      "properties": {
        "packageAlias": {
          "type": "string",
          "description": "Alias of MSIX Package."
        },
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share.",
          "x-nullable": false
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
          "x-nullable": false
        },
        "packageFullName": {
          "type": "string",
          "description": "Package Full Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal. ",
          "x-nullable": true
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image. ",
          "x-nullable": false
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed.",
          "x-nullable": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool. ",
          "x-nullable": false
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies. ",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          }
        },
        "version": {
          "type": "string",
          "description": "Package version found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date Package was last updated, found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications. ",
          "x-nullable": false,
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          }
        },
        "certificateName": {
          "type": "string",
          "description": "Certificate name found in the appxmanifest.xml. ",
          "x-nullable": true
        },
        "certificateExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "Date certificate expires, found in the appxmanifest.xml. ",
          "x-nullable": true
        }
      }
    },
    "FailHealthCheckOnStagingFailureEnum": {
      "type": "string",
      "description": "Parameter indicating how the health check should behave if this package fails staging",
      "enum": [
        "Unhealthy",
        "NeedsAssistance",
        "DoNotFail"
      ],
      "x-ms-enum": {
        "name": "failHealthCheckOnStagingFailure",
        "modelAsString": true
      }
    },
    "HostPool": {
      "type": "object",
      "description": "Represents a HostPool definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/HostPoolProperties",
          "description": "Detailed properties for HostPool",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ]
    },
    "HostPoolList": {
      "type": "object",
      "title": "HostPoolList",
      "description": "List of HostPool definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of HostPool definitions.",
          "items": {
            "$ref": "#/definitions/HostPool"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "HostPoolPatch": {
      "type": "object",
      "description": "HostPool properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/HostPoolPatchProperties",
          "description": "HostPool properties that can be patched.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "HostPoolPatchProperties": {
      "type": "object",
      "description": "Properties of HostPool.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of HostPool."
        },
        "description": {
          "type": "string",
          "description": "Description of HostPool."
        },
        "customRdpProperty": {
          "type": "string",
          "description": "Custom rdp property of HostPool."
        },
        "maxSessionLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The max session limit of HostPool.",
          "x-nullable": true
        },
        "personalDesktopAssignmentType": {
          "type": "string",
          "description": "PersonalDesktopAssignment type for HostPool.",
          "enum": [
            "Automatic",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "PersonalDesktopAssignmentType",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "loadBalancerType": {
          "type": "string",
          "description": "The type of the load balancer.",
          "enum": [
            "BreadthFirst",
            "DepthFirst",
            "Persistent"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerType",
            "modelAsString": true
          }
        },
        "ring": {
          "type": "integer",
          "format": "int32",
          "description": "The ring number of HostPool.",
          "x-nullable": true
        },
        "validationEnvironment": {
          "type": "boolean",
          "description": "Is validation environment.",
          "x-nullable": true
        },
        "registrationInfo": {
          "$ref": "#/definitions/RegistrationInfoPatch",
          "description": "The registration info of HostPool.",
          "x-nullable": true
        },
        "vmTemplate": {
          "type": "string",
          "description": "VM template for sessionhosts configuration within hostpool."
        },
        "ssoadfsAuthority": {
          "type": "string",
          "description": "URL to customer ADFS server for signing WVD SSO certificates."
        },
        "ssoClientId": {
          "type": "string",
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
        },
        "ssoClientSecretKeyVaultPath": {
          "type": "string",
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
        },
        "ssoSecretType": {
          "type": "string",
          "description": "The type of single sign on Secret Type.",
          "enum": [
            "SharedKey",
            "Certificate",
            "SharedKeyInKeyVault",
            "CertificateInKeyVault"
          ],
          "x-ms-enum": {
            "name": "SSOSecretType",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "preferredAppGroupType": {
          "type": "string",
          "description": "The type of preferred application group type, default to Desktop Application Group",
          "enum": [
            "None",
            "Desktop",
            "RailApplications"
          ],
          "x-ms-enum": {
            "name": "PreferredAppGroupType",
            "modelAsString": true
          }
        },
        "startVMOnConnect": {
          "type": "boolean",
          "description": "The flag to turn on/off StartVMOnConnect feature.",
          "x-nullable": true
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Enabled to allow this resource to be access from the public network",
          "enum": [
            "Enabled",
            "Disabled",
            "EnabledForSessionHostsOnly",
            "EnabledForClientsOnly"
          ],
          "x-ms-enum": {
            "name": "HostpoolPublicNetworkAccess",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "agentUpdate": {
          "$ref": "#/definitions/AgentUpdatePatchProperties",
          "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
          "x-nullable": true
        },
        "managedPrivateUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ManagedPrivateUDP",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "directUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DirectUDP",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "publicUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicUDP",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "relayUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "RelayUDP",
            "modelAsString": true
          },
          "x-nullable": false
        }
      }
    },
    "HostPoolProperties": {
      "type": "object",
      "description": "Properties of HostPool.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of HostPool. (internal use)",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of HostPool."
        },
        "description": {
          "type": "string",
          "description": "Description of HostPool."
        },
        "hostPoolType": {
          "type": "string",
          "description": "HostPool type for desktop.",
          "enum": [
            "Personal",
            "Pooled",
            "BYODesktop"
          ],
          "x-ms-enum": {
            "name": "HostPoolType",
            "modelAsString": true,
            "values": [
              {
                "value": "Personal",
                "description": "Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost."
              },
              {
                "value": "Pooled",
                "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
              },
              {
                "value": "BYODesktop",
                "description": "Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct."
              }
            ]
          },
          "x-nullable": false
        },
        "personalDesktopAssignmentType": {
          "type": "string",
          "description": "PersonalDesktopAssignment type for HostPool.",
          "enum": [
            "Automatic",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "PersonalDesktopAssignmentType",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "customRdpProperty": {
          "type": "string",
          "description": "Custom rdp property of HostPool."
        },
        "maxSessionLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The max session limit of HostPool.",
          "x-nullable": true
        },
        "loadBalancerType": {
          "type": "string",
          "description": "The type of the load balancer.",
          "enum": [
            "BreadthFirst",
            "DepthFirst",
            "Persistent"
          ],
          "x-ms-enum": {
            "name": "LoadBalancerType",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "ring": {
          "type": "integer",
          "format": "int32",
          "description": "The ring number of HostPool.",
          "x-nullable": true
        },
        "validationEnvironment": {
          "type": "boolean",
          "description": "Is validation environment.",
          "x-nullable": true
        },
        "registrationInfo": {
          "$ref": "#/definitions/RegistrationInfo",
          "description": "The registration info of HostPool.",
          "x-nullable": true
        },
        "vmTemplate": {
          "type": "string",
          "description": "VM template for sessionhosts configuration within hostpool."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup links.",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "appAttachPackageReferences": {
          "type": "array",
          "description": "List of App Attach Package links.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "ssoadfsAuthority": {
          "type": "string",
          "description": "URL to customer ADFS server for signing WVD SSO certificates."
        },
        "ssoClientId": {
          "type": "string",
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
        },
        "ssoClientSecretKeyVaultPath": {
          "type": "string",
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
        },
        "ssoSecretType": {
          "type": "string",
          "description": "The type of single sign on Secret Type.",
          "enum": [
            "SharedKey",
            "Certificate",
            "SharedKeyInKeyVault",
            "CertificateInKeyVault"
          ],
          "x-ms-enum": {
            "name": "SSOSecretType",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "preferredAppGroupType": {
          "type": "string",
          "description": "The type of preferred application group type, default to Desktop Application Group",
          "enum": [
            "None",
            "Desktop",
            "RailApplications"
          ],
          "x-ms-enum": {
            "name": "PreferredAppGroupType",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "startVMOnConnect": {
          "type": "boolean",
          "description": "The flag to turn on/off StartVMOnConnect feature.",
          "x-nullable": true
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "x-nullable": true,
          "readOnly": true
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints",
          "enum": [
            "Enabled",
            "Disabled",
            "EnabledForSessionHostsOnly",
            "EnabledForClientsOnly"
          ],
          "x-ms-enum": {
            "name": "HostpoolPublicNetworkAccess",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "agentUpdate": {
          "$ref": "#/definitions/AgentUpdateProperties",
          "description": "The session host configuration for updating agent, monitoring agent, and stack component.",
          "x-nullable": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection associated with the specified resource",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "managedPrivateUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ManagedPrivateUDP",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "directUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DirectUDP",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "publicUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicUDP",
            "modelAsString": true
          },
          "x-nullable": false
        },
        "relayUDP": {
          "type": "string",
          "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections",
          "enum": [
            "Default",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "RelayUDP",
            "modelAsString": true
          },
          "x-nullable": false
        }
      },
      "required": [
        "hostPoolType",
        "loadBalancerType",
        "preferredAppGroupType"
      ]
    },
    "ImportPackageInfoRequest": {
      "type": "object",
      "description": "Information to import app attach package",
      "properties": {
        "path": {
          "type": "string",
          "description": "URI to Image"
        },
        "packageArchitecture": {
          "type": "string",
          "description": "Possible device architectures that an app attach package can be configured for",
          "enum": [
            "ARM",
            "ARM64",
            "x86",
            "x64",
            "Neutral",
            "x86a64",
            "ALL"
          ],
          "x-ms-enum": {
            "name": "AppAttachPackageArchitectures",
            "modelAsString": true
          },
          "x-nullable": true
        }
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Log for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log"
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of the log"
        }
      }
    },
    "MSIXImageURI": {
      "type": "object",
      "description": "Represents URI referring to MSIX Image",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI to Image"
        }
      }
    },
    "MSIXPackage": {
      "type": "object",
      "description": "Schema for MSIX Package properties.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/MSIXPackageProperties",
          "description": "Detailed properties for MSIX Package",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "MSIXPackageList": {
      "type": "object",
      "title": "MsixPackageList",
      "description": "List of MSIX Package definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MSIX Package definitions.",
          "items": {
            "$ref": "#/definitions/MSIXPackage"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "MSIXPackagePatch": {
      "type": "object",
      "description": "MSIX Package properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MSIXPackagePatchProperties",
          "description": "Detailed properties for MSIX Package",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "MSIXPackagePatchProperties": {
      "type": "object",
      "description": "MSIX Package properties that can be patched.",
      "properties": {
        "isActive": {
          "type": "boolean",
          "description": "Set a version of the package to be active across hostpool. "
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Set Registration mode. Regular or Delayed."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for MSIX Package."
        }
      }
    },
    "MSIXPackageProperties": {
      "type": "object",
      "description": "Schema for MSIX Package properties.",
      "properties": {
        "imagePath": {
          "type": "string",
          "description": "VHD/CIM image path on Network Share.",
          "x-nullable": false
        },
        "packageName": {
          "type": "string",
          "description": "Package Name from appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageFamilyName": {
          "type": "string",
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
          "x-nullable": false
        },
        "displayName": {
          "type": "string",
          "description": "User friendly Name to be displayed in the portal. ",
          "x-nullable": true
        },
        "packageRelativePath": {
          "type": "string",
          "description": "Relative Path to the package inside the image. ",
          "x-nullable": false
        },
        "isRegularRegistration": {
          "type": "boolean",
          "description": "Specifies how to register Package in feed.",
          "x-nullable": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Make this version of the package the active one across the hostpool. ",
          "x-nullable": false
        },
        "packageDependencies": {
          "type": "array",
          "description": "List of package dependencies. ",
          "items": {
            "$ref": "#/definitions/MsixPackageDependencies"
          }
        },
        "version": {
          "type": "string",
          "description": "Package version found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date Package was last updated, found in the appxmanifest.xml. ",
          "x-nullable": false
        },
        "packageApplications": {
          "type": "array",
          "description": "List of package applications. ",
          "x-nullable": false,
          "items": {
            "$ref": "#/definitions/MsixPackageApplications"
          }
        }
      }
    },
    "MaintenanceWindowPatchProperties": {
      "type": "object",
      "description": "Maintenance window starting hour and day of week.",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "The update start hour of the day. (0 - 23)"
        },
        "dayOfWeek": {
          "type": "string",
          "description": "Day of the week.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "x-ms-enum": {
            "name": "DayOfWeek",
            "modelAsString": false
          }
        }
      }
    },
    "MaintenanceWindowProperties": {
      "type": "object",
      "description": "Maintenance window starting hour and day of week.",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "The update start hour of the day. (0 - 23)"
        },
        "dayOfWeek": {
          "type": "string",
          "description": "Day of the week.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "x-ms-enum": {
            "name": "DayOfWeek",
            "modelAsString": false
          }
        }
      }
    },
    "MsixPackageApplications": {
      "type": "object",
      "description": "Schema for MSIX Package Application properties.",
      "properties": {
        "appId": {
          "type": "string",
          "description": "Package Application Id, found in appxmanifest.xml.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Description of Package Application.",
          "x-nullable": false
        },
        "appUserModelID": {
          "type": "string",
          "description": "Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.",
          "x-nullable": false
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name.",
          "x-nullable": false
        },
        "iconImageName": {
          "type": "string",
          "description": "User friendly name.",
          "x-nullable": false
        },
        "rawIcon": {
          "type": "string",
          "format": "byte",
          "description": "the icon a 64 bit string as a byte array."
        },
        "rawPng": {
          "type": "string",
          "format": "byte",
          "description": "the icon a 64 bit string as a byte array."
        }
      }
    },
    "MsixPackageDependencies": {
      "type": "object",
      "description": "Schema for MSIX Package Dependencies properties.",
      "properties": {
        "dependencyName": {
          "type": "string",
          "description": "Name of package dependency.",
          "x-nullable": false
        },
        "publisher": {
          "type": "string",
          "description": "Name of dependency publisher.",
          "x-nullable": false
        },
        "minVersion": {
          "type": "string",
          "description": "Dependency version required.",
          "x-nullable": false
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Properties of the operation",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "PrivateEndpointConnectionListResultWithSystemData": {
      "type": "object",
      "description": "List of private endpoint connection associated with the specified storage account",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionWithSystemData"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionWithSystemData": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
        }
      ]
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Provisioning",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "RegistrationInfo": {
      "type": "object",
      "description": "Represents a RegistrationInfo definition.",
      "properties": {
        "expirationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of registration token.",
          "x-nullable": true
        },
        "token": {
          "type": "string",
          "description": "The registration token base64 encoded string."
        },
        "registrationTokenOperation": {
          "type": "string",
          "description": "The type of resetting the token.",
          "enum": [
            "Delete",
            "None",
            "Update"
          ],
          "x-ms-enum": {
            "name": "RegistrationTokenOperation",
            "modelAsString": true
          },
          "x-nullable": false
        }
      }
    },
    "RegistrationInfoPatch": {
      "type": "object",
      "description": "Represents a RegistrationInfo definition.",
      "properties": {
        "expirationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of registration token.",
          "x-nullable": true
        },
        "registrationTokenOperation": {
          "type": "string",
          "description": "The type of resetting the token.",
          "enum": [
            "Delete",
            "None",
            "Update"
          ],
          "x-ms-enum": {
            "name": "RegistrationTokenOperation",
            "modelAsString": true
          }
        }
      }
    },
    "RegistrationTokenList": {
      "type": "object",
      "title": "RegistrationTokenList",
      "description": "List of RegistrationToken definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of RegistrationToken definitions.",
          "items": {
            "$ref": "#/definitions/RegistrationTokenMinimal"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "RegistrationTokenMinimal": {
      "type": "object",
      "description": "Represents a Minimal set of properties for RegistrationToken definition.",
      "properties": {
        "expirationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of registration token.",
          "x-nullable": true
        },
        "token": {
          "type": "string",
          "description": "The registration token base64 encoded string.",
          "x-ms-secret": true
        }
      }
    },
    "ResourceProviderOperation": {
      "type": "object",
      "description": "Supported operation of this resource provider.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "type": "object",
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Resource provider: Microsoft Desktop Virtualization."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of this operation."
            }
          }
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Is a data action."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties"
        }
      },
      "readOnly": true
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "description": "Result of the request to list operations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by this resource provider.",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "ScalingHostPoolReference": {
      "type": "object",
      "description": "Scaling plan reference to hostpool.",
      "properties": {
        "hostPoolArmPath": {
          "type": "string",
          "description": "Arm path of referenced hostpool."
        },
        "scalingPlanEnabled": {
          "type": "boolean",
          "description": "Is the scaling plan enabled for this hostpool."
        }
      }
    },
    "ScalingPlan": {
      "type": "object",
      "title": "ScalingPlan",
      "description": "Represents a scaling plan definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/ScalingPlanProperties",
          "description": "Detailed properties for scaling plan.",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ]
    },
    "ScalingPlanList": {
      "type": "object",
      "title": "ScalingPlanList",
      "description": "List of scaling plan definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of scaling plan definitions.",
          "items": {
            "$ref": "#/definitions/ScalingPlan"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ScalingPlanPatch": {
      "type": "object",
      "description": "Scaling plan properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ScalingPlanPatchProperties",
          "description": "Detailed properties for scaling plan",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScalingPlanPatchProperties": {
      "type": "object",
      "description": "Scaling plan properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of scaling plan."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name of scaling plan."
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone of the scaling plan."
        },
        "exclusionTag": {
          "type": "string",
          "description": "Exclusion tag for scaling plan."
        },
        "schedules": {
          "type": "array",
          "description": "List of ScalingSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingSchedule"
          }
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of ScalingHostPoolReference definitions.",
          "items": {
            "$ref": "#/definitions/ScalingHostPoolReference"
          }
        }
      }
    },
    "ScalingPlanPersonalSchedule": {
      "type": "object",
      "description": "Represents a ScalingPlanPersonalSchedule definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/ScalingPlanPersonalScheduleProperties",
          "description": "Detailed properties for ScalingPlanPersonalSchedule",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScalingPlanPersonalScheduleList": {
      "type": "object",
      "title": "ScalingPlanPersonalScheduleList",
      "description": "List of ScalingPlanPersonalSchedule definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of ScalingPlanPersonalSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingPlanPersonalSchedule"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ScalingPlanPersonalSchedulePatch": {
      "type": "object",
      "description": "ScalingPlanPersonalSchedule properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanPersonalScheduleProperties",
          "description": "Detailed properties for ScalingPlanPersonalSchedule",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScalingPlanPersonalScheduleProperties": {
      "type": "object",
      "description": "A ScalingPlanPersonalSchedule.",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": true
            }
          }
        },
        "rampUpStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp up period."
        },
        "rampUpAutoStartHosts": {
          "type": "string",
          "description": "The desired startup behavior during the ramp up period for personal vms in the hostpool.",
          "enum": [
            "None",
            "WithAssignedUser",
            "All"
          ],
          "x-ms-enum": {
            "name": "StartupBehavior",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "Session hosts will not be started by the service. This setting depends on Start VM on Connect to be enabled to start the session hosts."
              },
              {
                "value": "WithAssignedUser",
                "description": "Session hosts with an assigned user will be started during Ramp Up"
              },
              {
                "value": "All",
                "description": "All personal session hosts in the hostpool will be started during ramp up."
              }
            ]
          }
        },
        "rampUpStartVMOnConnect": {
          "type": "string",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually.",
          "default": "Enable",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SetStartVMOnConnect",
            "modelAsString": true
          }
        },
        "rampUpActionOnDisconnect": {
          "type": "string",
          "description": "Action to be taken after a user disconnect during the ramp up period.",
          "enum": [
            "None",
            "Deallocate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "rampUpMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp up period.",
          "minimum": 0
        },
        "rampUpActionOnLogoff": {
          "type": "string",
          "description": "Action to be taken after a logoff during the ramp up period.",
          "enum": [
            "None",
            "Deallocate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "rampUpMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp up period.",
          "minimum": 0
        },
        "peakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for peak period."
        },
        "peakStartVMOnConnect": {
          "type": "string",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the peak phase.",
          "default": "Enable",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SetStartVMOnConnect",
            "modelAsString": true
          }
        },
        "peakActionOnDisconnect": {
          "type": "string",
          "description": "Action to be taken after a user disconnect during the peak period.",
          "enum": [
            "None",
            "Deallocate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "peakMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period.",
          "minimum": 0
        },
        "peakActionOnLogoff": {
          "type": "string",
          "description": "Action to be taken after a logoff during the peak period.",
          "enum": [
            "None",
            "Deallocate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "peakMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period.",
          "minimum": 0
        },
        "rampDownStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp down period."
        },
        "rampDownStartVMOnConnect": {
          "type": "string",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp down phase.",
          "default": "Enable",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SetStartVMOnConnect",
            "modelAsString": true
          }
        },
        "rampDownActionOnDisconnect": {
          "type": "string",
          "description": "Action to be taken after a user disconnect during the ramp down period.",
          "enum": [
            "None",
            "Deallocate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "rampDownMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period.",
          "minimum": 0
        },
        "rampDownActionOnLogoff": {
          "type": "string",
          "description": "Action to be taken after a logoff during the ramp down period.",
          "enum": [
            "None",
            "Deallocate",
            "Hibernate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "rampDownMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period.",
          "minimum": 0
        },
        "offPeakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for off-peak period."
        },
        "offPeakStartVMOnConnect": {
          "type": "string",
          "description": "The desired configuration of Start VM On Connect for the hostpool during the off-peak phase.",
          "default": "Enable",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SetStartVMOnConnect",
            "modelAsString": true
          }
        },
        "offPeakActionOnDisconnect": {
          "type": "string",
          "description": "Action to be taken after a user disconnect during the off-peak period.",
          "enum": [
            "None",
            "Deallocate",
            "Hibernate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "offPeakMinutesToWaitOnDisconnect": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period.",
          "minimum": 0
        },
        "offPeakActionOnLogoff": {
          "type": "string",
          "description": "Action to be taken after a logoff during the off-peak period.",
          "enum": [
            "None",
            "Deallocate",
            "Hibernate"
          ],
          "x-ms-enum": {
            "name": "SessionHandlingOperation",
            "modelAsString": true
          }
        },
        "offPeakMinutesToWaitOnLogoff": {
          "type": "integer",
          "format": "int32",
          "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period.",
          "minimum": 0
        }
      }
    },
    "ScalingPlanPooledSchedule": {
      "type": "object",
      "description": "Represents a ScalingPlanPooledSchedule definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/ScalingPlanPooledScheduleProperties",
          "description": "Detailed properties for ScalingPlanPooledSchedule",
          "x-nullable": false,
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "ScalingPlanPooledScheduleList": {
      "type": "object",
      "title": "ScalingPlanPooledScheduleList",
      "description": "List of ScalingPlanPooledSchedule definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of ScalingPlanPooledSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingPlanPooledSchedule"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ScalingPlanPooledSchedulePatch": {
      "type": "object",
      "description": "ScalingPlanPooledSchedule properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScalingPlanPooledScheduleProperties",
          "description": "Detailed properties for ScalingPlanPooledSchedule",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "ScalingPlanPooledScheduleProperties": {
      "type": "object",
      "description": "A ScalingPlanPooledSchedule.",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": true
            }
          }
        },
        "rampUpStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp up period."
        },
        "rampUpLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for ramp up period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        },
        "rampUpMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp up period.",
          "minimum": 0,
          "maximum": 100
        },
        "rampUpCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp up period.",
          "minimum": 1,
          "maximum": 100
        },
        "peakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for peak period."
        },
        "peakLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for peak period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        },
        "rampDownStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp down period."
        },
        "rampDownLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for ramp down period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        },
        "rampDownMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp down period.",
          "minimum": 0,
          "maximum": 100
        },
        "rampDownCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp down period.",
          "minimum": 1,
          "maximum": 100
        },
        "rampDownForceLogoffUsers": {
          "type": "boolean",
          "description": "Should users be logged off forcefully from hosts."
        },
        "rampDownStopHostsWhen": {
          "type": "string",
          "description": "Specifies when to stop hosts during ramp down period.",
          "enum": [
            "ZeroSessions",
            "ZeroActiveSessions"
          ],
          "x-ms-enum": {
            "name": "StopHostsWhen",
            "modelAsString": true
          }
        },
        "rampDownWaitTimeMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of minutes to wait to stop hosts during ramp down period."
        },
        "rampDownNotificationMessage": {
          "type": "string",
          "description": "Notification message for users during ramp down period."
        },
        "offPeakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for off-peak period."
        },
        "offPeakLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for off-peak period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        }
      }
    },
    "ScalingPlanProperties": {
      "type": "object",
      "description": "Scaling plan properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of scaling plan. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of scaling plan."
        },
        "friendlyName": {
          "type": "string",
          "description": "User friendly name of scaling plan."
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone of the scaling plan."
        },
        "hostPoolType": {
          "type": "string",
          "description": "HostPool type for desktop.",
          "default": "Pooled",
          "enum": [
            "Pooled"
          ],
          "x-ms-enum": {
            "name": "ScalingHostPoolType",
            "modelAsString": true,
            "values": [
              {
                "value": "Pooled",
                "description": "Users get a new (random) SessionHost every time it connects to the HostPool."
              }
            ]
          },
          "x-nullable": false
        },
        "exclusionTag": {
          "type": "string",
          "description": "Exclusion tag for scaling plan."
        },
        "schedules": {
          "type": "array",
          "description": "List of ScalingPlanPooledSchedule definitions.",
          "items": {
            "$ref": "#/definitions/ScalingSchedule"
          }
        },
        "hostPoolReferences": {
          "type": "array",
          "description": "List of ScalingHostPoolReference definitions.",
          "items": {
            "$ref": "#/definitions/ScalingHostPoolReference"
          }
        }
      },
      "required": [
        "timeZone"
      ]
    },
    "ScalingSchedule": {
      "type": "object",
      "description": "A ScalingPlanPooledSchedule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ScalingPlanPooledSchedule."
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Set of days of the week on which this schedule is active.",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ]
          }
        },
        "rampUpStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp up period."
        },
        "rampUpLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for ramp up period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        },
        "rampUpMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp up period.",
          "minimum": 0,
          "maximum": 100
        },
        "rampUpCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp up period.",
          "minimum": 1,
          "maximum": 100
        },
        "peakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for peak period."
        },
        "peakLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for peak period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        },
        "rampDownStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for ramp down period."
        },
        "rampDownLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for ramp down period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        },
        "rampDownMinimumHostsPct": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum host percentage for ramp down period.",
          "minimum": 0,
          "maximum": 100
        },
        "rampDownCapacityThresholdPct": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity threshold for ramp down period.",
          "minimum": 1,
          "maximum": 100
        },
        "rampDownForceLogoffUsers": {
          "type": "boolean",
          "description": "Should users be logged off forcefully from hosts."
        },
        "rampDownStopHostsWhen": {
          "type": "string",
          "description": "Specifies when to stop hosts during ramp down period.",
          "enum": [
            "ZeroSessions",
            "ZeroActiveSessions"
          ],
          "x-ms-enum": {
            "name": "StopHostsWhen",
            "modelAsString": true
          }
        },
        "rampDownWaitTimeMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of minutes to wait to stop hosts during ramp down period."
        },
        "rampDownNotificationMessage": {
          "type": "string",
          "description": "Notification message for users during ramp down period."
        },
        "offPeakStartTime": {
          "$ref": "#/definitions/Time",
          "description": "Starting time for off-peak period."
        },
        "offPeakLoadBalancingAlgorithm": {
          "type": "string",
          "description": "Load balancing algorithm for off-peak period.",
          "enum": [
            "BreadthFirst",
            "DepthFirst"
          ],
          "x-ms-enum": {
            "name": "SessionHostLoadBalancingAlgorithm",
            "modelAsString": true
          }
        }
      }
    },
    "SendMessage": {
      "type": "object",
      "description": "Represents message sent to a UserSession.",
      "properties": {
        "messageTitle": {
          "type": "string",
          "description": "Title of message."
        },
        "messageBody": {
          "type": "string",
          "description": "Body of message."
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification payload",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "items": {
            "$ref": "#/definitions/LogSpecification"
          }
        }
      }
    },
    "SessionHost": {
      "type": "object",
      "description": "Represents a SessionHost definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/SessionHostProperties",
          "description": "Detailed properties for SessionHost",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "SessionHostHealthCheckFailureDetails": {
      "type": "object",
      "description": "Contains details on the failure.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Failure message: hints on what is wrong and how to recover.",
          "readOnly": true
        },
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code corresponding for the failure.",
          "readOnly": true
        },
        "lastHealthCheckDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the last update.",
          "readOnly": true
        }
      }
    },
    "SessionHostHealthCheckReport": {
      "type": "object",
      "description": "The report for session host information.",
      "properties": {
        "healthCheckName": {
          "type": "string",
          "description": "Represents the name of the health check operation performed.",
          "enum": [
            "DomainJoinedCheck",
            "DomainTrustCheck",
            "FSLogixHealthCheck",
            "SxSStackListenerCheck",
            "UrlsAccessibleCheck",
            "MonitoringAgentCheck",
            "DomainReachable",
            "WebRTCRedirectorCheck",
            "SupportedEncryptionCheck",
            "MetaDataServiceCheck",
            "AppAttachHealthCheck"
          ],
          "x-ms-enum": {
            "name": "HealthCheckName",
            "modelAsString": true,
            "values": [
              {
                "value": "DomainJoinedCheck",
                "description": "Verifies the SessionHost is joined to a domain. If this check fails is classified as fatal as no connection can succeed if the SessionHost is not joined to the domain. (Currently Enabled)"
              },
              {
                "value": "DomainTrustCheck",
                "description": "Verifies the SessionHost is not experiencing domain trust issues that will prevent authentication on SessionHost at connection time when session is created. If this check fails is classified as fatal as no connection can succeed if we cannot reach the domain for authentication on the SessionHost. (Currently Enabled)"
              },
              {
                "value": "FSLogixHealthCheck",
                "description": "Verifies the FSLogix service is up and running to make sure users' profiles are loaded in the session. If this check fails is classified as fatal as even if the connection can succeed, user experience is bad as the user profile cannot be loaded and user will get a temporary profile in the session. (Currently Disabled)"
              },
              {
                "value": "SxSStackListenerCheck",
                "description": "Verifies that the SxS stack is up and running so connections can succeed. If this check fails is classified as fatal as no connection can succeed if the SxS stack is not ready. (Currently Enabled)"
              },
              {
                "value": "UrlsAccessibleCheck",
                "description": "Verifies that the required WVD service and Geneva URLs are reachable from the SessionHost. These URLs are: RdTokenUri, RdBrokerURI, RdDiagnosticsUri and storage blob URLs for agent monitoring (geneva). If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is unable to store warm path data (logs, operations ...). (Currently Disabled)"
              },
              {
                "value": "MonitoringAgentCheck",
                "description": "Verifies that the required Geneva agent is running. If this check fails, it is non fatal and the machine still can service connections, main issue may be that monitoring agent is missing or running (possibly) older version. (Currently Enabled)"
              },
              {
                "value": "DomainReachable",
                "description": "Verifies the domain the SessionHost is joined to is still reachable. If this check fails is classified as fatal as no connection can succeed if the domain the SessionHost is joined is not reachable at the time of connection. (Currently Disabled)"
              },
              {
                "value": "WebRTCRedirectorCheck",
                "description": "Verifies whether the WebRTCRedirector component is healthy. The WebRTCRedirector component is used to optimize video and audio performance in Microsoft Teams. This checks whether the component is still running, and whether there is a higher version available. If this check fails, it is non fatal and the machine still can service connections, main issue may be the WebRTCRedirector component has to be restarted or updated. (Currently Disabled)"
              },
              {
                "value": "SupportedEncryptionCheck",
                "description": "Verifies the value of SecurityLayer registration key. If the value is 0 (SecurityLayer.RDP) this check fails with Error code = NativeMethodErrorCode.E_FAIL and is fatal. If the value is 1 (SecurityLayer.Negotiate) this check fails with Error code = NativeMethodErrorCode.ERROR_SUCCESS and is non fatal. (Currently Disabled)"
              },
              {
                "value": "MetaDataServiceCheck",
                "description": "Verifies the metadata service is accessible and return compute properties. (Currently Enabled)"
              },
              {
                "value": "AppAttachHealthCheck",
                "description": "Verifies that the AppAttachService is healthy (there were no issues during package staging). The AppAttachService is used to enable the staging/registration (and eventual deregistration/destaging) of MSIX apps that have been set up by the tenant admin. This checks whether the component had any failures during package staging. Failures in staging will prevent some MSIX apps from working properly for the end user. If this check fails, it is non fatal and the machine still can service connections, main issue may be certain apps will not work for end-users. (Currently Enabled)"
              }
            ]
          },
          "readOnly": true
        },
        "healthCheckResult": {
          "type": "string",
          "description": "Represents the Health state of the health check we performed.",
          "enum": [
            "Unknown",
            "HealthCheckSucceeded",
            "HealthCheckFailed",
            "SessionHostShutdown"
          ],
          "x-ms-enum": {
            "name": "HealthCheckResult",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "Health check result is not currently known."
              },
              {
                "value": "HealthCheckSucceeded",
                "description": "Health check passed."
              },
              {
                "value": "HealthCheckFailed",
                "description": "Health check failed."
              },
              {
                "value": "SessionHostShutdown",
                "description": "We received a Shutdown notification."
              }
            ]
          },
          "readOnly": true
        },
        "additionalFailureDetails": {
          "$ref": "#/definitions/SessionHostHealthCheckFailureDetails",
          "description": "Additional detailed information on the failure.",
          "readOnly": true
        }
      }
    },
    "SessionHostList": {
      "type": "object",
      "title": "SessionHostList",
      "description": "List of SessionHost definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SessionHost definitions.",
          "items": {
            "$ref": "#/definitions/SessionHost"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "SessionHostPatch": {
      "type": "object",
      "description": "SessionHost properties that can be patched.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SessionHostPatchProperties",
          "description": "Detailed properties for SessionHost",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "SessionHostPatchProperties": {
      "type": "object",
      "description": "SessionHost properties that can be patched.",
      "properties": {
        "allowNewSession": {
          "type": "boolean",
          "description": "Allow a new session."
        },
        "assignedUser": {
          "type": "string",
          "description": "User assigned to SessionHost."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of SessionHost"
        }
      }
    },
    "SessionHostProperties": {
      "type": "object",
      "description": "Schema for SessionHost properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of SessionHost. (internal use)",
          "readOnly": true
        },
        "lastHeartBeat": {
          "type": "string",
          "format": "date-time",
          "description": "Last heart beat from SessionHost."
        },
        "sessions": {
          "type": "integer",
          "format": "int32",
          "description": "Number of sessions on SessionHost."
        },
        "agentVersion": {
          "type": "string",
          "description": "Version of agent on SessionHost."
        },
        "allowNewSession": {
          "type": "boolean",
          "description": "Allow a new session."
        },
        "virtualMachineId": {
          "type": "string",
          "description": "Virtual Machine Id of SessionHost's underlying virtual machine.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Resource Id of SessionHost's underlying virtual machine.",
          "readOnly": true
        },
        "assignedUser": {
          "type": "string",
          "description": "User assigned to SessionHost."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of SessionHost"
        },
        "status": {
          "type": "string",
          "description": "Status for a SessionHost.",
          "enum": [
            "Available",
            "Unavailable",
            "Shutdown",
            "Disconnected",
            "Upgrading",
            "UpgradeFailed",
            "NoHeartbeat",
            "NotJoinedToDomain",
            "DomainTrustRelationshipLost",
            "SxSStackListenerNotReady",
            "FSLogixNotHealthy",
            "NeedsAssistance"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true,
            "values": [
              {
                "value": "Available",
                "description": "Session Host has passed all the health checks and is available to handle connections."
              },
              {
                "value": "Unavailable",
                "description": "Session Host is either turned off or has failed critical health checks which is causing service not to be able to route connections to this session host. Note this replaces previous 'NoHeartBeat' status."
              },
              {
                "value": "Shutdown",
                "description": "Session Host is shutdown - RD Agent reported session host to be stopped or deallocated."
              },
              {
                "value": "Disconnected",
                "description": "The Session Host is unavailable because it is currently disconnected."
              },
              {
                "value": "Upgrading",
                "description": "Session Host is unavailable because currently an upgrade of RDAgent/side-by-side stack is in progress. Note: this state will be removed once the upgrade completes and the host is able to accept connections."
              },
              {
                "value": "UpgradeFailed",
                "description": "Session Host is unavailable because the critical component upgrade (agent, side-by-side stack, etc.) failed."
              },
              {
                "value": "NoHeartbeat",
                "description": "The Session Host is not heart beating."
              },
              {
                "value": "NotJoinedToDomain",
                "description": "SessionHost is not joined to domain."
              },
              {
                "value": "DomainTrustRelationshipLost",
                "description": "SessionHost's domain trust relationship lost"
              },
              {
                "value": "SxSStackListenerNotReady",
                "description": "SxS stack installed on the SessionHost is not ready to receive connections."
              },
              {
                "value": "FSLogixNotHealthy",
                "description": "FSLogix is in an unhealthy state on the session host."
              },
              {
                "value": "NeedsAssistance",
                "description": "New status to inform admins that the health on their endpoint needs to be fixed. The connections might not fail, as these issues are not fatal."
              }
            ]
          }
        },
        "statusTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the status.",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "description": "The version of the OS on the session host."
        },
        "sxSStackVersion": {
          "type": "string",
          "description": "The version of the side by side stack on the session host."
        },
        "updateState": {
          "type": "string",
          "description": "Update state of a SessionHost.",
          "enum": [
            "Initial",
            "Pending",
            "Started",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "UpdateState",
            "modelAsString": true
          }
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the last update.",
          "readOnly": true
        },
        "updateErrorMessage": {
          "type": "string",
          "description": "The error message."
        },
        "sessionHostHealthCheckResults": {
          "type": "array",
          "description": "List of SessionHostHealthCheckReports",
          "items": {
            "$ref": "#/definitions/SessionHostHealthCheckReport"
          },
          "readOnly": true
        }
      }
    },
    "StartMenuItem": {
      "type": "object",
      "description": "Represents a StartMenuItem definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StartMenuItemProperties",
          "description": "Detailed properties for StartMenuItem",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "StartMenuItemList": {
      "type": "object",
      "title": "StartMenuItemList",
      "description": "List of StartMenuItem definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of StartMenuItem definitions.",
          "items": {
            "$ref": "#/definitions/StartMenuItem"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "StartMenuItemProperties": {
      "type": "object",
      "description": "Schema for StartMenuItem properties.",
      "properties": {
        "appAlias": {
          "type": "string",
          "description": "Alias of StartMenuItem."
        },
        "filePath": {
          "type": "string",
          "description": "Path to the file of StartMenuItem."
        },
        "commandLineArguments": {
          "type": "string",
          "description": "Command line arguments for StartMenuItem."
        },
        "iconPath": {
          "type": "string",
          "description": "Path to the icon."
        },
        "iconIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the icon."
        }
      }
    },
    "Time": {
      "type": "object",
      "description": "The time for a scaling action to occur.",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "The hour.",
          "minimum": 0,
          "maximum": 23
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "The minute.",
          "minimum": 0,
          "maximum": 59
        }
      },
      "required": [
        "hour",
        "minute"
      ]
    },
    "UserSession": {
      "type": "object",
      "description": "Represents a UserSession definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/UserSessionProperties",
          "description": "Detailed properties for UserSession",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "UserSessionList": {
      "type": "object",
      "title": "UserSessionList",
      "description": "List of UserSession definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of UserSession definitions.",
          "items": {
            "$ref": "#/definitions/UserSession"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "UserSessionProperties": {
      "type": "object",
      "description": "Schema for UserSession properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of user session. (internal use)",
          "readOnly": true
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name."
        },
        "applicationType": {
          "type": "string",
          "description": "Application type of application.",
          "enum": [
            "RemoteApp",
            "Desktop"
          ],
          "x-ms-enum": {
            "name": "ApplicationType",
            "modelAsString": true
          }
        },
        "sessionState": {
          "type": "string",
          "description": "State of user session.",
          "enum": [
            "Unknown",
            "Active",
            "Disconnected",
            "Pending",
            "LogOff",
            "UserProfileDiskMounted"
          ],
          "x-ms-enum": {
            "name": "SessionState",
            "modelAsString": true
          }
        },
        "activeDirectoryUserName": {
          "type": "string",
          "description": "The active directory user name."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the user session create."
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Represents a Workspace definition.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "Detailed properties for Workspace",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ResourceModelWithAllowedPropertySet"
        }
      ]
    },
    "WorkspaceList": {
      "type": "object",
      "title": "WorkspaceList",
      "description": "List of Workspace definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Workspace definitions.",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results.",
          "readOnly": true
        }
      }
    },
    "WorkspacePatch": {
      "type": "object",
      "description": "Workspace properties that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "tags to be updated",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePatchProperties",
          "description": "Detailed properties for Workspace",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspacePatchProperties": {
      "type": "object",
      "description": "Workspace properties that can be patched.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of Workspace."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Workspace."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup links.",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Enabled to allow this resource to be access from the public network",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "x-nullable": true
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Schema for Workspace properties.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "ObjectId of Workspace. (internal use)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of Workspace."
        },
        "friendlyName": {
          "type": "string",
          "description": "Friendly name of Workspace."
        },
        "applicationGroupReferences": {
          "type": "array",
          "description": "List of applicationGroup resource Ids.",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "cloudPcResource": {
          "type": "boolean",
          "description": "Is cloud pc resource.",
          "x-nullable": true,
          "readOnly": true
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connection associated with the specified resource",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "AppAttachPackageNameParameter": {
      "name": "appAttachPackageName",
      "in": "path",
      "description": "The name of the App Attach package",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$",
      "x-ms-parameter-location": "method"
    },
    "ApplicationGroupNameParameter": {
      "name": "applicationGroupName",
      "in": "path",
      "description": "The name of the application group",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 64,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "ApplicationNameParameter": {
      "name": "applicationName",
      "in": "path",
      "description": "The name of the application within the specified application group",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "DesktopNameParameter": {
      "name": "desktopName",
      "in": "path",
      "description": "The name of the desktop within the specified desktop group",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "HostPoolNameParameter": {
      "name": "hostPoolName",
      "in": "path",
      "description": "The name of the host pool within the specified resource group",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 64,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "MSIXImageURIParameter": {
      "name": "msixImageURI",
      "in": "path",
      "description": "URI to the MSIX Image (VHD/CIM).",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "x-ms-parameter-location": "method"
    },
    "MSIXPackageFullNameParameter": {
      "name": "msixPackageFullName",
      "in": "path",
      "description": "The version specific package full name of the MSIX package within specified hostpool",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "ScalingPlanNameParameter": {
      "name": "scalingPlanName",
      "in": "path",
      "description": "The name of the scaling plan.",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 64,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "ScalingPlanScheduleNameParameter": {
      "name": "scalingPlanScheduleName",
      "in": "path",
      "description": "The name of the ScalingPlanSchedule",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "SessionHostNameParameter": {
      "name": "sessionHostName",
      "in": "path",
      "description": "The name of the session host within the specified host pool",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 48,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    },
    "StartMenuItemNameParameter": {
      "name": "startMenuItemName",
      "in": "path",
      "description": "The name of the start menu item within the specified host pool",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "x-ms-parameter-location": "method"
    },
    "UserSessionIdParameter": {
      "name": "userSessionId",
      "in": "path",
      "description": "The name of the user session within the specified session host",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 24,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "description": "The name of the workspace",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 64,
      "pattern": "^[A-Za-z0-9@.\\-_ ]*$",
      "x-ms-parameter-location": "method"
    }
  }
}